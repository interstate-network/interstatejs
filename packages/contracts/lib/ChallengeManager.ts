import BN from "bn.js";
import { Address } from "web3x/address";
import { EventLog, TransactionReceipt } from "web3x/formatters";
import { Contract, ContractOptions, TxCall, TxSend, EventSubscriptionFactory } from "web3x/contract";
import { Eth } from "web3x/eth";
import abi from "./ChallengeManagerAbi";
export type BlockChallengeEvent = {
    blockHash: string;
    transactionIndex: string;
    challenger: Address;
};
export type ChallengeResponseEvent = {
    blockHash: string;
    transactionIndex: string;
    witness: string;
};
export type ChallengeTimeoutEvent = {
    blockHash: string;
    transactionIndex: string;
    step: string;
};
export interface BlockChallengeEventLog extends EventLog<BlockChallengeEvent, "BlockChallenge"> {
}
export interface ChallengeResponseEventLog extends EventLog<ChallengeResponseEvent, "ChallengeResponse"> {
}
export interface ChallengeTimeoutEventLog extends EventLog<ChallengeTimeoutEvent, "ChallengeTimeout"> {
}
interface ChallengeManagerEvents {
    BlockChallenge: EventSubscriptionFactory<BlockChallengeEventLog>;
    ChallengeResponse: EventSubscriptionFactory<ChallengeResponseEventLog>;
    ChallengeTimeout: EventSubscriptionFactory<ChallengeTimeoutEventLog>;
}
interface ChallengeManagerEventLogs {
    BlockChallenge: BlockChallengeEventLog;
    ChallengeResponse: ChallengeResponseEventLog;
    ChallengeTimeout: ChallengeTimeoutEventLog;
}
interface ChallengeManagerTxEventLogs {
    BlockChallenge: BlockChallengeEventLog[];
    ChallengeResponse: ChallengeResponseEventLog[];
    ChallengeTimeout: ChallengeTimeoutEventLog[];
}
export interface ChallengeManagerTransactionReceipt extends TransactionReceipt<ChallengeManagerTxEventLogs> {
}
interface ChallengeManagerMethods {
    challengeTransaction(query: {
        parentHash: string;
        childIndex: number | string | BN;
        blockNumber: number | string | BN;
        commitment: {
            submittedAt: number | string | BN;
            exitsRoot: string;
            coinbase: Address;
            blockHash: string;
        };
    }, header: {
        parentHash: string;
        number: number | string | BN;
        incomingTransactionsIndex: number | string | BN;
        incomingTransactionsCount: number | string | BN;
        transactionsCount: number | string | BN;
        transactionsRoot: string;
        stateRoot: string;
        exitsRoot: string;
        coinbase: Address;
        timestamp: number | string | BN;
    }, transactionIndex: number | string | BN): TxSend<ChallengeManagerTransactionReceipt>;
    respondToChallenge(blockHash: string, transactionIndex: number | string | BN, witness: string): TxSend<ChallengeManagerTransactionReceipt>;
    challengeTimeout(blockHash: string, transactionIndex: number | string | BN): TxSend<ChallengeManagerTransactionReceipt>;
    reclaimChallengeBond(blockHash: string, transactionIndex: number | string | BN): TxSend<ChallengeManagerTransactionReceipt>;
}
export interface ChallengeManagerDefinition {
    methods: ChallengeManagerMethods;
    events: ChallengeManagerEvents;
    eventLogs: ChallengeManagerEventLogs;
}
export class ChallengeManager extends Contract<ChallengeManagerDefinition> {
    constructor(eth: Eth, address?: Address, options?: ContractOptions) {
        super(eth, abi, address, options);
    }
    deploy(): TxSend<ChallengeManagerTransactionReceipt> {
        return super.deployBytecode("0x608060405234801561001057600080fd5b50610ff5806100206000396000f3fe60806040526004361061003f5760003560e01c806306e60c48146100445780631b93852314610066578063b4e7abf414610086578063c4dc1c57146100a6575b600080fd5b34801561005057600080fd5b5061006461005f366004610abe565b6100b9565b005b34801561007257600080fd5b50610064610081366004610adf565b61018b565b34801561009257600080fd5b506100646100a1366004610abe565b610246565b6100646100b4366004610b7e565b6103a1565b6100c1610a16565b6000838152600e602052604090206100df908363ffffffff6104db16565b60208101519091506001600160a01b03166101155760405162461bcd60e51b815260040161010c90610d8e565b60405180910390fd5b6000838152600f602052604081205460ff16600281111561013257fe5b14156101505760405162461bcd60e51b815260040161010c90610e31565b6000838152600e60209081526040808320858452600201825290912080546001600160e01b031916905581015161018690610557565b505050565b610193610a34565b506000838152600e6020908152604091829020825180840190935280546001600160a01b03168084526001909101549183019190915233146101e75760405162461bcd60e51b815260040161010c90610dc5565b6000848152600e6020526040902061020690848463ffffffff61059816565b837fb752fc407c988ac8f18430d2c8cad0038be65f0a4e7a1519fcd923e6e3ebe7628484604051610238929190610f1f565b60405180910390a250505050565b61024e610a16565b6000838152600e6020526040902061026c908363ffffffff6104db16565b905060008160400151600281111561028057fe5b141561029e5760405162461bcd60e51b815260040161010c90610d8e565b6102a78161068e565b6102c35760405162461bcd60e51b815260040161010c90610cd8565b6102cb610a34565b506000838152600e6020908152604091829020825180840190935280546001600160a01b03168352600190810154918301919091528260400151600281111561031057fe5b14156103285761032382602001516106ae565b610340565b805161033390610557565b6020810180516000190190525b6000848152600e602090815260408083208684526002019091529081902080546001600160e01b031916905582810151905185917fd8d0dc16ac259aaa555adf7e670a81ac0730bc59579ea3c6958f0867028077a191610238918791610f7a565b6103b260008463ffffffff6107f216565b80156103cd57508260600151606001516103cb83610838565b145b80156103dc5750816080015181105b6103f85760405162461bcd60e51b815260040161010c90610c87565b610400610868565b6060808401510151610410610a34565b506000818152600e6020908152604091829020825180840190935280546001600160a01b03168084526001909101549183019190915261047c576101008401516000838152600e6020526040902080546001600160a01b0319166001600160a01b039092169190911790555b6000828152600e6020526040902061049a908463ffffffff61087a16565b817fb5ed7b326efa43496a7e8c7cc4b2b0cdab77da6c31ecbd1bb3985680bfc45ee984336040516104cc929190610f08565b60405180910390a25050505050565b6104e3610a16565b6000828152600284810160209081526040928390208351606081018552815466ffffffffffffff81168252600160381b81046001600160a01b03169382019390935293909290840191600160d81b900460ff169081111561054057fe5b600281111561054b57fe5b90525090505b92915050565b806001600160a01b03166108fc61056c610967565b6040518115909202916000818181858888f19350505050158015610594573d6000803e3d6000fd5b5050565b6000828152600384016020526040902054156105c65760405162461bcd60e51b815260040161010c90610dfa565b80516020808301919091206000848152600386019092526040909120556105eb610a16565b6105f584846104db565b66ffffffffffffff43811682526002604080840182815260008881528984016020908152929020855181549387015166ffffffffffffff19909416951694909417600160381b600160d81b031916600160381b6001600160a01b0390931692909202919091178084559051939450849391839160ff60d81b191690600160d81b90849081111561068157fe5b0217905550505050505050565b6000610698610973565b825166ffffffffffffff16014310159050919050565b806001600160a01b03811633141561071957806001600160a01b03166108fc60026106d7610979565b816106de57fe5b046106e7610967565b019081150290604051600060405180830381858888f19350505050158015610713573d6000803e3d6000fd5b506107b0565b806001600160a01b03166108fc6004610730610979565b8161073757fe5b04610740610967565b019081150290604051600060405180830381858888f1935050505015801561076c573d6000803e3d6000fd5b50336108fc600461077b610979565b8161078257fe5b049081150290604051600060405180830381858888f193505050501580156107ae573d6000803e3d6000fd5b505b60006108fc60026107bf610979565b816107c657fe5b049081150290604051600060405180830381858888f19350505050158015610186573d6000803e3d6000fd5b60006108018260600151610984565b82516000908152600d850160209081526040909120908401518154811061082457fe5b906000526020600020015414905092915050565b60008160405160200161084b9190610e91565b604051602081830303815290604052805190602001209050919050565b610878610873610967565b610997565b565b61088482826109f1565b156108a15760405162461bcd60e51b815260040161010c90610d46565b6108a9610a16565b6040805160608101825266ffffffffffffff431681523360208201529081016001905260008381526002808601602090815260409283902084518154928601516001600160a01b0316600160381b02600160381b600160d81b031966ffffffffffffff90921666ffffffffffffff1990941693909317169190911780825592840151939450849390929091839160ff60d81b191690600160d81b90849081111561094f57fe5b02179055505050506001918201805490920190915550565b670de0b6b3a764000090565b61020090565b662386f26fc1000090565b60008160405160200161084b9190610e5d565b803410156109b75760405162461bcd60e51b815260040161010c90610d0f565b803411156109ee5760405133903483900380156108fc02916000818181858888f19350505050158015610594573d6000803e3d6000fd5b50565b6000806109fe84846104db565b604001516002811115610a0d57fe5b14159392505050565b60408051606081018252600080825260208201819052909182015290565b604080518082019091526000808252602082015290565b80356001600160a01b038116811461055157600080fd5b600060808284031215610a73578081fd5b610a7d6080610f98565b8235815260208084013590820152905060408201356001600160a01b0381168114610aa757600080fd5b806040830152506060820135606082015292915050565b60008060408385031215610ad0578182fd5b50508035926020909101359150565b600080600060608486031215610af3578081fd5b833592506020808501359250604085013567ffffffffffffffff80821115610b19578384fd5b81870188601f820112610b2a578485fd5b8035925081831115610b3a578485fd5b610b4c601f8401601f19168501610f98565b91508282528884848301011115610b61578485fd5b828482018584013750838383830101528093505050509250925092565b6000806000838503610240811215610b94578384fd5b60e0811215610ba1578384fd5b610bab6080610f98565b853581526020860135602082015260408601356040820152610bd08760608801610a62565b6060820152935061014060df198201811315610bea578384fd5b610bf381610f98565b915060e08601358252610100808701356020840152610120808801356040850152828801356060850152610160880135608085015261018088013560a08501526101a088013560c08501526101c088013560e0850152610c57896101e08a01610a4b565b918401919091526102008701359083015250929592945050506102209091013590565b6001600160a01b03169052565b60208082526031908201527f426c6f636b206e6f74207265636f676e697a6564206f72207472616e7361637460408201527034b7b71037baba1037b3103930b733b29760791b606082015260800190565b6020808252601a908201527f4368616c6c656e676520686173206e6f7420657870697265642e000000000000604082015260600190565b6020808252601c908201527f496e73756666696369656e742076616c75652072656365697665642e00000000604082015260600190565b60208082526028908201527f5472616e73616374696f6e2068617320616c7265616479206265656e20636861604082015267363632b733b2b21760c11b606082015260800190565b60208082526019908201527f4368616c6c656e676520646f6573206e6f742065786973742e00000000000000604082015260600190565b6020808252818101527f4e6f7420746865206f726967696e616c20626c6f636b2070726f64756365722e604082015260600190565b60208082526019908201527f5769746e65737320616c726561647920636f6d6d697474656400000000000000604082015260600190565b602080825260129082015271109b1bd8dac81b9bdd081c995d995c9d195960721b604082015260600190565b81518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151610ef782850182610c7a565b505061012092830151919092015290565b9182526001600160a01b0316602082015260400190565b600083825260206040818401528351806040850152825b81811015610f5257858101830151858201606001528201610f36565b81811115610f635783606083870101525b50601f01601f191692909201606001949350505050565b8281526040810160038310610f8b57fe5b8260208301529392505050565b60405181810167ffffffffffffffff81118282101715610fb757600080fd5b60405291905056fea2646970667358221220569042865cf021cbff6f199a076a230b61e18a7d7e9f100e6faad73e27abe37664736f6c634300060b0033") as any;
    }
}
export var ChallengeManagerAbi = abi;
